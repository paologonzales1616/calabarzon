{"version":3,"sources":["pages/login/index.module.css","assets/images/logo.png","core/utils/Store.js","core/config/index.js","pages/login/index.js","components/content/Navigationbar.js","core/config/routes.js","components/sidebar/SideBar.js","components/content/Content.js","pages/home/index.js","pages/about/index.js","pages/dataset/index.js","pages/account/index.js","pages/prediction/index.js","pages/visualization/index.js","App.js","index.js"],"names":["module","exports","AppContext","createContext","isOpen","isMobile","previousWidth","page","UserContext","loggedIn","BrgyContext","DateContext","Date","getFullYear","toString","Store","children","useState","brgy","setBrgy","app","setApp","date","setDate","user","setUser","Provider","value","config","ENV","title","host","headers","Accept","withRouter","history","useContext","showPassword","setShowPassword","onLogin","values","a","console","log","options","method","body","JSON","stringify","fetch","res","json","content","status","notifyA","accountType","account_type","localStorage","setItem","push","useEffect","document","SigninSchema","Yup","shape","username","required","password","toast","error","containerId","enableMultiContainer","position","POSITION","TOP_RIGHT","className","styles","left","Card","form_login","style","paddingBottom","initialValues","validationSchema","onSubmit","errors","touched","handleChange","Form","Group","Label","Control","size","type","name","onChange","isInvalid","placeholder","Feedback","InputGroup","Append","Text","icon","faEye","faEyeSlash","cursor","onClick","Button","block","variant","right","Navbar","bg","expand","faAlignLeft","Toggle","aria-controls","Collapse","id","Nav","navbar","OverlayTrigger","placement","overlay","Tooltip","Link","e","preventDefault","removeItem","href","faPowerOff","routes","faHome","faChartLine","faChartBar","faDatabase","faUser","faInfoCircle","classNames","color","faTimes","pull","map","index","includes","getItem","Item","key","active","to","Content","Container","fluid","toggle","IsOpen","Index","data","setData","useLayoutEffect","getDataset","Row","Col","sm","md","Table","striped","bordered","hover","responsive","width","val","Year","users","setUsers","showDelete","setShowDelete","showUpdate","setShowUpdate","showNew","setShowNew","selectedUser","setSelectedUser","selectedUserIndex","setSelectedUserIndex","getUsers","userIndex","handleCloseDelete","notifyDelete","handleCloseUpdate","notifyUpdate","handleCloseNew","notifyNew","NewUserSchema","UpdateUserSchema","info","faPlus","handleShowDelete","faTrash","faCog","Modal","show","onHide","Header","closeButton","Title","Body","Footer","deleteUser","updateUser","FormControl","newUser","App","exact","path","component","LoginPage","HomePage","AboutPage","DatasetPage","AccountPage","PredictionPage","VisualizationPage","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.65f0a08e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"left\":\"login_left__aSEAi\",\"right\":\"login_right__Wsk4f\",\"map\":\"login_map__A0f_g\",\"form_login\":\"login_form_login__lgO7-\"};","module.exports = __webpack_public_path__ + \"static/media/logo.ccb5fc73.png\";","import React, { createContext, useState } from \"react\";\n\nexport const AppContext = createContext({\n  isOpen: true,\n  isMobile: true,\n  previousWidth: -1,\n  page: \"home\"\n});\nexport const UserContext = createContext({\n  loggedIn: false\n});\nexport const BrgyContext = createContext(0);\nexport const DateContext = createContext(new Date().getFullYear().toString());\nconst Store = ({ children }) => {\n  const [brgy, setBrgy] = useState(0);\n  const [app, setApp] = useState({\n    isOpen: true,\n    isMobile: true,\n    previousWidth: -1,\n    page: \"home\"\n  });\n  const [date, setDate] = useState(new Date().getFullYear().toString());\n  const [user, setUser] = useState({\n    loggedIn: false\n  });\n  return (\n    <AppContext.Provider value={{ app, setApp }}>\n      <UserContext.Provider value={{ user, setUser }}>\n        <BrgyContext.Provider value={{ brgy, setBrgy }}>\n          <DateContext.Provider value={{ date, setDate }}>\n            {children}\n          </DateContext.Provider>\n        </BrgyContext.Provider>\n      </UserContext.Provider>\n    </AppContext.Provider>\n  );\n};\n\nexport default Store;\n","export const config = {\n  ENV: \"dev\",\n  title: \"Calabarzon\",\n  host: \"http://localhost:5000\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  }\n};\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { config } from \"../../core/config/\";\nimport * as Yup from \"yup\";\nimport { Formik, Form as FormikForm } from \"formik\";\nimport { Card, Form, Button, InputGroup } from \"react-bootstrap\";\nimport styles from \"./index.module.css\";\nimport { withRouter } from \"react-router-dom\";\nimport logo from \"../../assets/images/logo.png\";\nimport { UserContext, BrgyContext } from \"../../core/utils/Store\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEyeSlash, faEye } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Index = ({ history }) => {\n  const { setUser } = useContext(UserContext);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const onLogin = async values => {\n    console.log(values);\n    const options = {\n      headers: config.headers,\n      method: \"POST\",\n      body: JSON.stringify({\n        ...values\n      })\n    };\n    const res = await fetch(`${config.host}/auth`, options);\n    const content = await res.json();\n    console.log(content);\n\n    if (content.status == \"fail\") {\n      notifyA();\n      return;\n    }\n    setUser({\n      loggedIn: true,\n      accountType: content.account_type\n    });\n\n    localStorage.setItem(\"accountType\", content.account_type);\n    if (content.account_type == \"admin\") {\n      await history.push(\"/admin\");\n    }\n    await history.push(\"/home\");\n  };\n\n  useEffect(() => {\n    document.title = config.title + \" | Login\";\n  }, []);\n\n  const SigninSchema = Yup.object().shape({\n    username: Yup.string().required(\"Username is required.\"),\n    password: Yup.string().required(\"Password is required\"),\n    brgy: Yup.string().required(\"Brgy is required\")\n  });\n\n  const notifyA = () =>\n    toast.error(`Error Invalid Username or Password`, { containerId: \"A\" });\n\n  return (\n    <div>\n      <ToastContainer\n        enableMultiContainer\n        containerId={\"A\"}\n        position={toast.POSITION.TOP_RIGHT}\n      />\n      <div className={styles.left + \" shadow\"}>\n        <Card className={styles.form_login + \" shadow\"}>\n          <h3 style={{ paddingBottom: \"10px\" }}>Login</h3>\n          <Formik\n            initialValues={{\n              username: \"\",\n              password: \"\",\n              brgy: \"anos\"\n            }}\n            validationSchema={SigninSchema}\n            onSubmit={values => onLogin(values)}\n          >\n            {({ errors, touched, handleChange, values }) => (\n              <FormikForm>\n                <Form.Group>\n                  <Form.Label>Username</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    type=\"text\"\n                    name=\"username\"\n                    value={values.username}\n                    onChange={handleChange}\n                    isInvalid={touched.username && errors.username}\n                    placeholder=\"Enter Username\"\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.username}\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>Password</Form.Label>\n                  <InputGroup size=\"sm\">\n                    <Form.Control\n                      type={showPassword ? \"text\" : \"password\"}\n                      name=\"password\"\n                      value={values.password}\n                      onChange={handleChange}\n                      isInvalid={touched.password && errors.password}\n                      placeholder=\"Enter Password\"\n                    />\n                    <InputGroup.Append>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon\n                          icon={showPassword ? faEye : faEyeSlash}\n                          style={{\n                            cursor: \"pointer\"\n                          }}\n                          onClick={() => setShowPassword(!showPassword)}\n                        />\n                      </InputGroup.Text>\n                    </InputGroup.Append>\n                  </InputGroup>\n                  <div className=\"text-danger\">\n                    {touched.password && errors.password ? (\n                      <small>{errors.password}</small>\n                    ) : (\n                      <></>\n                    )}\n                  </div>\n                </Form.Group>\n                <Button\n                  className=\"shadow\"\n                  block\n                  variant=\"success\"\n                  size=\"sm\"\n                  type=\"submit\"\n                >\n                  Login\n                </Button>\n              </FormikForm>\n            )}\n          </Formik>\n        </Card>\n      </div>\n      <div className={styles.right}>\n        {/* <img src={logo} alt=\"Map Logo\" className={styles.map} /> */}\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Index);\n","import React, { useContext, useLayoutEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAlignLeft, faPowerOff } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  Navbar,\n  Button,\n  Nav,\n  Form,\n  OverlayTrigger,\n  Tooltip\n} from \"react-bootstrap\";\nimport { AppContext, BrgyContext, DateContext } from \"../../core/utils/Store\";\nimport { withRouter } from \"react-router-dom\";\nconst Navigationbar = ({ history }) => {\n  const { app, setApp } = useContext(AppContext);\n\n  return (\n    <Navbar\n      bg=\"light\"\n      className=\"navbar shadow-sm p-3 mb-3 bg-white rounded\"\n      expand\n    >\n      <Button\n        variant=\"outline-success\"\n        onClick={() => setApp({ ...app, isOpen: !app.isOpen })}\n      >\n        <FontAwesomeIcon icon={faAlignLeft} />\n      </Button>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto pl-2\" navbar></Nav>\n        <Nav className=\"ml-auto pt-2\" navbar>\n          <OverlayTrigger\n            placement=\"auto\"\n            overlay={<Tooltip>Sign Out</Tooltip>}\n          >\n            <Nav.Link\n              onClick={e => {\n                e.preventDefault();\n                history.push(\"/login\");\n                localStorage.removeItem(\"accountType\");\n                localStorage.removeItem(\"brgy\");\n              }}\n              href=\"#\"\n            >\n              <FontAwesomeIcon size=\"lg\" icon={faPowerOff} />\n            </Nav.Link>\n          </OverlayTrigger>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default withRouter(Navigationbar);\n","import {\n  faChartLine,\n  faHome,\n  faChartBar,\n  faUser,\n  faInfoCircle,\n  faDatabase\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport const routes = [\n  {\n    name: \"Home\",\n    page: \"home\",\n    icon: faHome,\n    account_type: [\"user\", \"admin\"]\n  },\n  {\n    name: \"Prediction\",\n    page: \"prediction\",\n    icon: faChartLine,\n    account_type: [\"user\", \"admin\"]\n  },\n  {\n    name: \"Data Visualization\",\n    page: \"visualization\",\n    icon: faChartBar,\n    account_type: [\"user\", \"admin\"]\n  },\n  {\n    name: \"Dataset\",\n    page: \"dataset\",\n    icon: faDatabase,\n    account_type: [\"admin\", \"user\"]\n  },\n  {\n    name: \"Account\",\n    page: \"account\",\n    icon: faUser,\n    account_type: [\"admin\"]\n  },\n  {\n    name: \"About\",\n    page: \"about\",\n    icon: faInfoCircle,\n    account_type: [\"user\", \"admin\"]\n  }\n];\n","/* eslint-disable eqeqeq */\nimport React, { useContext } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { Nav, Button } from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport { AppContext } from \"../../core/utils/Store\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { routes } from \"../../core/config/routes\";\nconst SideBar = () => {\n  const { app, setApp } = useContext(AppContext);\n\n  return (\n    <div className={classNames(\"sidebar shadow\", { \"is-open\": app.isOpen })}>\n      <div className=\"sidebar-header pt-3 pb-3\">\n        <Button\n          variant=\"link\"\n          onClick={() =>\n            setApp({\n              ...app,\n              isOpen: !app.isOpen\n            })\n          }\n          style={{ color: \"#000\" }}\n          className=\"mt-4\"\n        >\n          <FontAwesomeIcon icon={faTimes} pull=\"right\" size=\"xs\" />\n        </Button>\n      </div>\n\n      <Nav className=\"flex-column pt-2\">\n        {routes.map((value, index) => {\n          if (\n            value.account_type.includes(localStorage.getItem(\"accountType\"))\n          ) {\n            return (\n              <Nav.Item\n                key={index}\n                className={classNames({ active: value.page == app.page })}\n              >\n                <Link className=\"nav-link\" to={`/${value.page}`}>\n                  <FontAwesomeIcon icon={value.icon} className=\"mr-2\" />\n                  {value.name}\n                </Link>\n              </Nav.Item>\n            );\n          }\n        })}\n      </Nav>\n    </div>\n  );\n};\n\nexport default withRouter(SideBar);\n","import React, { useContext } from \"react\";\nimport classNames from \"classnames\";\nimport { Container } from \"react-bootstrap\";\nimport NavBar from \"./Navigationbar\";\nimport SideBar from \"../sidebar/SideBar\";\nimport { AppContext } from \"../../core/utils/Store\";\n\nconst Content = ({ children }) => {\n  const { app, setApp } = useContext(AppContext);\n\n  return (\n    <div className=\"App wrapper\">\n      <SideBar />\n      <Container\n        fluid\n        className={classNames(\"content\", { \"is-open\": app.isOpen })}\n      >\n        <NavBar\n          toggle={() =>\n            setApp({\n              ...app,\n              IsOpen: !app.isOpen\n            })\n          }\n        />\n        {children}\n      </Container>\n    </div>\n  );\n};\n\nexport default Content;\n","import Content from \"../../components/content/Content\";\nimport React from 'react'\n\nconst Index = () => {\n    return (\n        <Content>\n            \n        </Content>\n    )\n}\n\nexport default Index\n","import React from 'react'\nimport Content from '../../components/content/Content'\n\nconst Index = () => {\n    return (\n        <Content>\n            \n        </Content>\n    )\n}\n\nexport default Index\n","import React, { useLayoutEffect, useEffect, useContext, useState } from \"react\";\nimport Content from \"../../components/content/Content\";\nimport { Row, Col, Button, Table } from \"react-bootstrap\";\nimport { config } from \"../../core/config\";\nimport { AppContext } from \"../../core/utils/Store\";\n\nconst Index = () => {\n  const { app, setApp } = useContext(AppContext);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    document.title = config.title + \" | Dataset\";\n    setApp({ ...app, page: \"dataset\" });\n    localStorage.page = \"dataset\";\n  }, []);\n\n  useLayoutEffect(() => {\n    getDataset();\n  }, []);\n\n  async function getDataset() {\n    const res = await fetch(`${config.host}/dataset/${2017}`);\n    const body = await res.json();\n    setData(body);\n    console.log(body);\n  }\n\n  return (\n    <Content>\n      <Row>\n        <Col sm={12} md={12}>\n          <Button\n            size=\"sm\"\n            variant=\"outline-success mb-3\"\n            className=\"float-right\"\n            onClick={() => {}}\n          >\n            New Entry\n          </Button>\n        </Col>\n        <Col className=\"text-center\" sm={12} md={12}>\n          <Table striped bordered hover size=\"sm\" responsive>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Year</th>\n                <th>Brgy</th>\n                <th>Sex</th>\n                <th>Age</th>\n                <th>Disease Code</th>\n                <th>Cases</th>\n                <th width=\"15%\">Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((val, index) => (\n                <tr key={index}>\n                  <td>{index + 1}</td>\n                  <td>{val.Year}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    </Content>\n  );\n};\n\nexport default Index;\n","import React, { useContext, useEffect, useState, useLayoutEffect } from \"react\";\nimport Content from \"../../components/content/Content\";\nimport { AppContext } from \"../../core/utils/Store\";\nimport { config } from \"../../core/config\";\nimport {\n  Container,\n  Table,\n  Card,\n  Button,\n  Row,\n  Col,\n  Modal,\n  InputGroup,\n  FormControl,\n  Form\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTrash,\n  faCog,\n  faPlus,\n  faEyeSlash,\n  faEye\n} from \"@fortawesome/free-solid-svg-icons\";\nimport * as Yup from \"yup\";\nimport { Formik, Form as FormikForm } from \"formik\";\nimport { BARANGAY_PROPERITES } from \"../../core/utils/Constants\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst Index = () => {\n  const { app, setApp } = useContext(AppContext);\n  const [users, setUsers] = useState([]);\n  const [showDelete, setShowDelete] = useState(false);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [showNew, setShowNew] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [selectedUser, setSelectedUser] = useState({ index: 0 }); // Selected user for update\n  const [selectedUserIndex, setSelectedUserIndex] = useState(0); // Selected index for delete\n\n  useEffect(() => {\n    document.title = config.title + \" | Account List\";\n    setApp({ ...app, page: \"account\" });\n    localStorage.page = \"account\";\n  }, []);\n\n  useLayoutEffect(() => {\n    getUsers();\n  }, []);\n\n  async function getUsers() {\n    const options = {\n      headers: config.headers\n    };\n    const res = await fetch(`${config.host}/accounts`, options);\n    const body = await res.json();\n    setUsers(body);\n  }\n\n  async function deleteUser() {\n    console.log(selectedUserIndex);\n    const options = {\n      headers: config.headers,\n      method: \"DELETE\",\n      body: JSON.stringify({\n        userIndex: selectedUserIndex\n      })\n    };\n    const res = await fetch(`${config.host}/accounts`, options);\n    const body = await res.json();\n    handleCloseDelete();\n    getUsers();\n    notifyDelete();\n  }\n\n  async function updateUser(password) {\n    console.log(password);\n    const options = {\n      headers: config.headers,\n      method: \"PUT\",\n      body: JSON.stringify({\n        index: selectedUser.index,\n        ...password\n      })\n    };\n    const res = await fetch(`${config.host}/accounts`, options);\n    const body = await res.json();\n    handleCloseUpdate();\n    getUsers();\n    setShowPassword(false);\n    notifyUpdate();\n  }\n\n  async function newUser(user) {\n    const options = {\n      headers: config.headers,\n      method: \"POST\",\n      body: JSON.stringify({\n        ...user\n      })\n    };\n    const res = await fetch(`${config.host}/accounts`, options);\n    const body = await res.json();\n    handleCloseNew();\n    getUsers();\n    setShowPassword(false);\n    notifyNew();\n  }\n\n  const handleShowDelete = index => {\n    setSelectedUserIndex(index);\n    setShowDelete(true);\n  };\n\n  const handleCloseDelete = () => {\n    setShowDelete(false);\n  };\n\n  const handleShowUpdate = user => {\n    setSelectedUser(user);\n    setShowUpdate(true);\n  };\n\n  const handleCloseUpdate = () => {\n    setShowUpdate(false);\n  };\n\n  const handleShowNew = () => {\n    setShowNew(true);\n  };\n\n  const handleCloseNew = () => {\n    setShowNew(false);\n  };\n\n  const NewUserSchema = Yup.object().shape({\n    username: Yup.string().required(\"Username is required.\"),\n    password: Yup.string().required(\"Password is required.\")\n  });\n\n  const UpdateUserSchema = Yup.object().shape({\n    password: Yup.string().required(\"Password is required.\")\n  });\n\n  const notifyNew = () => toast.info(`New User Added!`, { containerId: \"NEW\" });\n  const notifyDelete = () =>\n    toast.info(`Delete Success!`, { containerId: \"DELETE\" });\n  const notifyUpdate = () =>\n    toast.info(`Update Success!`, { containerId: \"UPDATE\" });\n\n  return (\n    <Content>\n      <ToastContainer\n        enableMultiContainer\n        containerId={\"NEW\"}\n        position={toast.POSITION.TOP_RIGHT}\n      />{\" \"}\n      <ToastContainer\n        enableMultiContainer\n        containerId={\"DELETE\"}\n        position={toast.POSITION.TOP_RIGHT}\n      />\n      <ToastContainer\n        enableMultiContainer\n        containerId={\"UPDATE\"}\n        position={toast.POSITION.TOP_RIGHT}\n      />\n      <Container>\n        <Row className=\"mb-2\">\n          <Col sm={12} md={12}>\n            <Button\n              className=\"mr-1 float-right\"\n              size=\"sm\"\n              variant=\"outline-success\"\n              onClick={() => handleShowNew(true)}\n            >\n              <FontAwesomeIcon icon={faPlus} className=\"mr-2\" />\n              New Account\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12} md={12}>\n            <Card className=\"p-2 text-center\">\n              <Table bordered>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Username</th>\n                    <th width=\"35%\">Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {users.map((data, index) => (\n                    <tr key={index}>\n                      <td>{index + 1}</td>\n                      <td>{data.username}</td>\n\n                      <td>\n                        <Button\n                          className=\"mr-1\"\n                          size=\"sm\"\n                          variant=\"outline-danger\"\n                          onClick={() => handleShowDelete(index)}\n                        >\n                          <FontAwesomeIcon icon={faTrash} className=\"mr-2\" />\n                          Delete\n                        </Button>\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline-secondary\"\n                          onClick={() =>\n                            handleShowUpdate({ index: index, brgy: data.brgy })\n                          }\n                        >\n                          <FontAwesomeIcon icon={faCog} className=\"mr-2\" />\n                          Update Password\n                        </Button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n      <Modal show={showDelete} onHide={handleCloseDelete}>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure you want to delete?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"danger\" onClick={() => deleteUser()}>\n            Yes\n          </Button>\n          <Button variant=\"outline-secondary\" onClick={handleCloseDelete}>\n            No\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal show={showUpdate} onHide={handleCloseUpdate}>\n        <Formik\n          initialValues={{\n            password: \"\"\n          }}\n          validationSchema={UpdateUserSchema}\n          onSubmit={values => updateUser(values)}\n        >\n          {({ errors, touched, handleChange, values }) => (\n            <FormikForm>\n              <Modal.Header closeButton>\n                <Modal.Title>Update User Password</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Form.Group>\n                  <Form.Label>Password</Form.Label>\n                  <InputGroup size=\"sm\">\n                    <FormControl\n                      name=\"password\"\n                      type={showPassword ? \"text\" : \"password\"}\n                      isInvalid={touched.password && errors.password}\n                      value={values.password}\n                      onChange={handleChange}\n                      placeholder=\"Enter new password\"\n                    />\n                    <InputGroup.Append>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon\n                          icon={showPassword ? faEye : faEyeSlash}\n                          style={{\n                            cursor: \"pointer\"\n                          }}\n                          onClick={() => setShowPassword(!showPassword)}\n                        />\n                      </InputGroup.Text>\n                    </InputGroup.Append>\n                  </InputGroup>\n                  <div className=\"text-danger\">\n                    {touched.password && errors.password ? (\n                      <small>{errors.password}</small>\n                    ) : (\n                      <></>\n                    )}\n                  </div>\n                </Form.Group>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button type=\"submit\" variant=\"success\" size=\"sm\">\n                  Save\n                </Button>\n                <Button\n                  size=\"sm\"\n                  variant=\"outline-secondary\"\n                  onClick={handleCloseUpdate}\n                >\n                  Cancel\n                </Button>\n              </Modal.Footer>\n            </FormikForm>\n          )}\n        </Formik>\n      </Modal>\n      <Modal show={showNew} onHide={handleCloseNew}>\n        <Formik\n          initialValues={{\n            username: \"\",\n            password: \"\"\n          }}\n          validationSchema={NewUserSchema}\n          onSubmit={values => newUser(values)}\n        >\n          {({ errors, touched, handleChange, values }) => (\n            <FormikForm>\n              <Modal.Header closeButton>\n                <Modal.Title>New User</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Form.Group>\n                  <Form.Label>Username</Form.Label>\n                  <FormControl\n                    size=\"sm\"\n                    type=\"text\"\n                    name=\"username\"\n                    value={values.username}\n                    onChange={handleChange}\n                    isInvalid={touched.username && errors.username}\n                    placeholder=\"Enter Username\"\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.username}\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>Password</Form.Label>\n                  <InputGroup size=\"sm\">\n                    <FormControl\n                      name=\"password\"\n                      type={showPassword ? \"text\" : \"password\"}\n                      isInvalid={touched.password && errors.password}\n                      value={values.password}\n                      onChange={handleChange}\n                      placeholder=\"Enter new password\"\n                    />\n                    <InputGroup.Append>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon\n                          icon={showPassword ? faEye : faEyeSlash}\n                          style={{\n                            cursor: \"pointer\"\n                          }}\n                          onClick={() => setShowPassword(!showPassword)}\n                        />\n                      </InputGroup.Text>\n                    </InputGroup.Append>\n                  </InputGroup>\n                  <div className=\"text-danger\">\n                    {touched.password && errors.password ? (\n                      <small>{errors.password}</small>\n                    ) : (\n                      <></>\n                    )}\n                  </div>\n                </Form.Group>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button\n                  size=\"sm\"\n                  type=\"submit\"\n                  className=\"shadow\"\n                  variant=\"success\"\n                >\n                  Save\n                </Button>\n                <Button\n                  size=\"sm\"\n                  variant=\"outline-secondary\"\n                  onClick={handleCloseNew}\n                >\n                  Cancel\n                </Button>\n              </Modal.Footer>\n            </FormikForm>\n          )}\n        </Formik>\n      </Modal>\n    </Content>\n  );\n};\n\nexport default Index;\n","import React from 'react'\nimport Content from '../../components/content/Content'\n\nconst Index = () => {\n    return (\n        <Content>\n            \n        </Content>\n    )\n}\n\nexport default Index\n","import React from 'react'\nimport Content from '../../components/content/Content'\n\nconst Index = () => {\n    return (\n        <Content>\n            \n        </Content>\n    )\n}\n\nexport default Index\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Store from \"./core/utils/Store\";\nimport LoginPage from \"./pages/login\";\nimport HomePage from \"./pages/home\";\nimport AboutPage from \"./pages/about\";\nimport DatasetPage from \"./pages/dataset\";\nimport AccountPage from \"./pages/account\";\nimport PredictionPage from \"./pages/prediction\";\nimport VisualizationPage from \"./pages/visualization\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Store>\n        <Switch>\n          <Route exact path={[\"/\", \"/login\"]} component={LoginPage} />\n          <Route path=\"/home\" component={HomePage} />\n          <Route path=\"/about\" component={AboutPage} />\n          <Route path=\"/dataset\" component={DatasetPage} />\n          <Route path=\"/account\" component={AccountPage} />\n          <Route path=\"/prediction\" component={PredictionPage} />\n          <Route path=\"/visualization\" component={VisualizationPage} />\n        </Switch>\n      </Store>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}